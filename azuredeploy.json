{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "configName": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployment, i.e. BaseConfig01. Do not use spaces or special characters other than _ or -. Used to concatenate resource names."
      },
      "defaultValue": "BaseConfig_01"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the new AD domain."
      },
      "defaultValue": "corp.contoso.com"
    },
    "ouName": {
      "type": "string",
      "metadata": {
        "description": "Optional: Canonical OU for the computer objects. If blank, computer objects will be added to the Computers container."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the domain administrator account to create, i.e. globaladmin. This will also be used to create a local admin account on each VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator account password."
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [ "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2" ],
      "metadata": {
        "description": "Select a VM size for all VMs in your deployment."
      },
      "defaultValue": "Standard_DS1_v2"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "The storage account type."
      },
      "defaultValue": "Standard_LRS"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS label prefix for public IPs. Must be lowercase and match the regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation."
      }
    }
  },

  "variables": {
    "location": "[resourceGroup().location]",
    "baseUrl": "[concat(parameters('_artifactsLocation'))]",
    "baseVnet": "[concat(parameters('configName'),'-VNET')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('baseVnet'))]",
    "shortDomainName": "[first(split(parameters('domainName'),'.'))]",
    "domainUserName": "[concat(variables('shortDomainName'),variables('escape'),parameters('adminUsername'))]",
    "escape": "\\",

    "storage": {
      "baseUrl": "[variables('baseUrl')]",
      "assetLocation": "[concat(variables('baseUrl'),'/DSC')]",
      "storageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]"
    },

    "network": {
      "vnetName": "[variables('baseVnet')]",
      "subnetRef": "[concat(variables('VnetID'),'/subnets/subnet-01')]",
      "subnet": "10.0.0.0/24",
      "nsgName": "[concat(parameters('configName'),'-NSG')]"
    },


    "adVmName": "DC1",
    "adModulesURL": "[concat(variables('storage').assetLocation,'/CreateADPDC.ps1.zip')]",
    "adConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "adNicIP": "10.0.0.10",
    "adPublicIpName": "[concat(parameters('configName'),'-AD_IP')]",

    "appVmName": "APP1",
    "appNicIP": "10.0.0.11",
    "appPublicIpName": "[concat(parameters('configName'),'-APP_IP')]",

    "cliVmName": "CLIENT1",
    "clientNicIP": "10.0.0.12",
    "cliPublicIpName": "[concat(parameters('configName'),'-CLI_IP')]"
  },

  "resources": [
    {
      "apiVersion": "2018-01-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('network').nsgName]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Front End"
      },
      "comments": "This network security group enables RDP on port 3389.",
      "properties": {
        "securityRules": [
          {
            "name": "rdp-rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('network').vnetName]",
      "type": "Microsoft.Network/virtualNetworks",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('network').nsgName)]"
      ],
      "location": "[variables('location')]",
      "apiVersion": "2018-01-01",
      "comments": "This is the virtual network for the deployment.",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('network').subnet]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": "[variables('adNicIP')]"
        },
        "subnets": [
          {
            "name": "subnet-01",
            "properties": {
              "addressPrefix": "[variables('network').subnet]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('network').nsgName)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storage').storageAccountName,'vhds')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "kind": "Storage",
      "comments": "This storage account contains VHDs for VMs in the deployment.",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storage').storageAccountName,'diag')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "kind": "Storage",
      "comments": "This storage account contains diagnostics data.",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('adPublicIpName')]",
      "location": "[resourceGroup().location]",
      "comments": "This is the public IP address for the ADDC VM.",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('dnsLabelPrefix'),'ad'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appPublicIpName')]",
      "location": "[resourceGroup().location]",
      "comments": "This is the public IP address for the app server VM.",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('dnsLabelPrefix'),'app'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('cliPublicIpName')]",
      "location": "[resourceGroup().location]",
      "comments": "This is the public IP address for the client VM.",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('dnsLabelPrefix'),'cli'))]"
        }
      }
    },
    {
      "name": "[concat(parameters('configName'),'-AD_NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/',parameters('configName'),'-vnet')]"
      ],
      "apiVersion": "2015-06-15",
      "comments": "This is the network interface for the ADDC VM.",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adNicIP')]",
              "publicIPAddress": {
                "id": "[resourceId ('Microsoft.Network/publicIPAddresses/',variables('adPublicIpName'))]"
              },
              "subnet": {
                "id": "[variables('network').subnetRef]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('configName'),'-APP_NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/',parameters('configName'),'-vnet')]"
      ],
      "apiVersion": "2015-06-15",
      "comments": "This is the network interface for the app server VM.",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('appNicIP')]",
              "publicIPAddress": {
                "id": "[resourceId ('Microsoft.Network/publicIPAddresses/',variables('appPublicIpName'))]"
              },
              "subnet": {
                "id": "[variables('network').subnetRef]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('adNicIP')]"
          ],
          "internalDomainNameSuffix": "[parameters('domainName')]"
        }
      }
    },
    {
      "name": "[concat(parameters('configName'),'-CLI_NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/',parameters('configName'),'-vnet')]"
      ],
      "apiVersion": "2015-06-15",
      "comments": "This is the network interface for the client VM.",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('clientNicIP')]",
              "publicIPAddress": {
                "id": "[resourceId ('Microsoft.Network/publicIPAddresses/',variables('cliPublicIpName'))]"
              },
              "subnet": {
                "id": "[variables('network').subnetRef]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('adNicIP')]"
          ],
          "internalDomainNameSuffix": "[parameters('domainName')]"
        }
      }
    },
    {
      "name": "ADDC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This is the deployment resource for the ADDC VM.",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('configName'),'-AD_NIC')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('storage').baseUrl,'/nested/ADDC.json',parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "adVMName": {
            "value": "[variables('adVMName')]"
          },
          "adVMSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storage').storageAccountName]"
          },
          "adNicName": {
            "value": "[concat(parameters('configName'),'-AD_NIC')]"
          },
          "adModulesURL": {
            "value": "[variables('adModulesURL')]"
          },
          "adConfigurationFunction": {
            "value": "[variables('adConfigurationFunction')]"
          },
          "SasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "configName": {
            "value": "[parameters('configName')]"
          }
        }
      }
    },
    {
      "name": "AppServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This is the deployment resource for the app server VM.",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('configName'),'-APP_NIC')]",
        "[concat('Microsoft.Resources/deployments/','ADDC')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('storage').baseUrl,'/nested/APP.json',parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "appVMName": {
            "value": "[variables('appVmName')]"
          },
          "appVMSize": {
            "value": "[parameters('vmSize')]"
          },
          "domainUserName": {
            "value": "[variables('domainUserName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storage').storageAccountName]"
          },
          "appNicName": {
            "value": "[concat(parameters('configName'),'-APP_NIC')]"
          },
          "DNSServerAddress": {
            "value": "[variables('adNicIP')]"
          },
          "SasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "configName": {
            "value": "[parameters('configName')]"
          },
          "ouName": {
            "value": "[parameters('ouName')]"
          }
        }
      }
    },
    {
      "name": "Client",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This is the deployment resource for the client VM.",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('configName'),'-CLI_NIC')]",
        "[concat('Microsoft.Resources/deployments/','ADDC')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('storage').baseUrl,'/nested/CLIENT.json',parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "cliVMName": {
            "value": "[variables('cliVmName')]"
          },
          "cliVMSize": {
            "value": "[parameters('vmSize')]"
          },
          "domainUserName": {
            "value": "[variables('domainUserName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storage').storageAccountName]"
          },
          "cliNicName": {
            "value": "[concat(parameters('configName'),'-CLI_NIC')]"
          },
          "DNSServerAddress": {
            "value": "[variables('adNicIP')]"
          },
          "SasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "configName": {
            "value": "[parameters('configName')]"
          },
          "ouName": {
            "value": "[parameters('ouName')]"
          }
        }
      }
    }
  ],

  "outputs": {
    "DcPublicIpAddress": {
      "type": "string",
      "value": "[reference(variables('adPublicIpName')).ipAddress]"
    },
    "DcFqdn": {
      "type": "string",
      "value": "[reference(variables('adPublicIpName')).dnsSettings.fqdn]"
    },
    "AppPublicIpAddress": {
      "type": "string",
      "value": "[reference(variables('appPublicIpName')).ipAddress]"
    },
    "AppFqdn": {
      "type": "string",
      "value": "[reference(variables('appPublicIpName')).dnsSettings.fqdn]"
    },
    "ClientPublicIpAddress": {
      "type": "string",
      "value": "[reference(variables('cliPublicIpName')).ipAddress]"
    },
    "ClientFqdn": {
      "type": "string",
      "value": "[reference(variables('cliPublicIpName')).dnsSettings.fqdn]"
    }
  }
}
